{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///home/stefan/Documenten/web-development/008change-my-image/frontend/src/env.ts"],"sourcesContent":["export const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8080';\n"],"names":[],"mappings":";;;AAAO,MAAM,UAAU,6DAAmC","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/stefan/Documenten/web-development/008change-my-image/frontend/src/lib/axios.ts"],"sourcesContent":["// import axios from 'axios';\n// import { API_URL } from '../env';\n\n// export const api = axios.create({\n//   baseURL: API_URL,\n//   withCredentials: true,\n// });\n\n// api.interceptors.request.use((config) => {\n//   const csrfToken = document.cookie\n//     .split('; ')\n//     .find(row => row.startsWith('XSRF-TOKEN='))\n//     ?.split('=')[1];\n  \n//   if (csrfToken) {\n//     config.headers['X-XSRF-TOKEN'] = decodeURIComponent(csrfToken);\n//   }\n  \n//   return config;\n// });\n\n\nimport axios from 'axios';\nimport { API_URL } from '../env';\n\nexport const api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n});"],"names":[],"mappings":"AAAA,6BAA6B;AAC7B,oCAAoC;AAEpC,oCAAoC;AACpC,sBAAsB;AACtB,2BAA2B;AAC3B,MAAM;AAEN,6CAA6C;AAC7C,sCAAsC;AACtC,mBAAmB;AACnB,kDAAkD;AAClD,uBAAuB;AAEvB,qBAAqB;AACrB,sEAAsE;AACtE,MAAM;AAEN,mBAAmB;AACnB,MAAM;;;;AAGN;AACA;;;AAEO,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC9B,SAAS,0GAAA,CAAA,UAAO;IAChB,iBAAiB;AACnB","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/stefan/Documenten/web-development/008change-my-image/frontend/src/app/convert/page.tsx"],"sourcesContent":["'use client';\nimport React, { useEffect, useState } from \"react\";\nimport { useSession } from \"next-auth/react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { api } from \"../../lib/axios\";\nimport { Download, Upload, Wand2, AlertTriangle, Eye, CheckCircle } from \"lucide-react\";\n\nconst FORMATS = [\"jpg\",\"jpeg\",\"png\",\"webp\",\"avif\",\"heic\",\"tiff\",\"bmp\",\"gif\",\"svg\"];\n\ntype Job = {\n  file: File;\n  status: 'queued' | 'running' | 'done' | 'error';\n  url?: string;\n  error?: string;\n};\n\nexport default function ConvertPage() {\n  const { data: session } = useSession();\n  const [target, setTarget] = useState('webp');\n  const [quality, setQuality] = useState(85);\n  const [jobs, setJobs] = useState<Job[]>([]);\n  const [refreshKey, setRefreshKey] = useState(0);\n  const token = (session as any)?.idToken;\n\n  const onDrop = (acceptedFiles: File[]) => {\n    const newJobs = acceptedFiles.map((f) => ({ file: f, status: 'queued' } as Job));\n    setJobs((prev) => [...prev, ...newJobs]);\n  };\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, multiple: true });\n  const dropClass = isDragActive ? 'border-sky-500 bg-sky-50' : 'border-slate-300';\n\n  const start = async () => {\n    const pending = jobs.filter(j => j.status === 'queued');\n    for (const j of pending) {\n      setJobs((prev) => prev.map(x => x === j ? { ...x, status: 'running' } : x));\n      const form = new FormData();\n      form.append('file', j.file);\n      form.append('to', target);\n      form.append('quality', String(quality));\n      try {\n        console.log('Starting conversion for:', j.file.name, 'to', target);\n        console.log('Token present:', !!token);\n        \n        const res = await api.post('/api/convert', form, {\n          headers: token ? { Authorization: `Bearer ${token}` } : undefined,\n          responseType: 'blob',\n        });\n        \n        console.log('Response status:', res.status);\n        console.log('Response ok:', res.status < 400);\n        \n        const blob = res.data;\n        const url = URL.createObjectURL(blob);\n        console.log('Conversion successful, blob URL created:', url);\n        console.log('Current job object:', j);\n        setJobs((prev) => {\n          console.log('Previous jobs state:', prev);\n          const updated = prev.map(job => {\n            if (job.file.name === j.file.name && job.status === 'running') {\n              console.log('Updating job from running to done:', job);\n              return { ...job, status: 'done' as const, url };\n            }\n            return job;\n          });\n          console.log('New jobs state:', updated);\n          return updated;\n        });\n        setRefreshKey(prev => {\n          console.log('Updating refresh key from', prev, 'to', prev + 1);\n          return prev + 1;\n        });\n      } catch (e: any) {\n        console.error('Conversion error:', e);\n        let errorMessage = e.message;\n        if (e.response?.status === 401) {\n          errorMessage = 'Please sign in with Google to convert.';\n        } else if (e.response?.status === 402) {\n          errorMessage = 'Daily limit reached (20 free conversions). Sign in and subscribe for unlimited conversions.';\n        } else if (e.response?.status === 403) {\n          errorMessage = 'CSRF token missing or invalid. Please refresh the page.';\n        } else if (e.response) {\n          errorMessage = `Conversion failed: ${e.response.status}`;\n        }\n        setJobs((prev) => prev.map(x => x === j ? { ...x, status: 'error', error: errorMessage } : x));\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log('Jobs state changed:', jobs);\n  }, [jobs]);\n\n  useEffect(() => {\n    console.log('RefreshKey changed:', refreshKey);\n  }, [refreshKey]);\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-xl font-semibold text-sky-800 flex items-center gap-2\">\n        <Wand2 className=\"text-sky-600\" /> Convert Images\n      </h1>\n      <div className=\"rounded-lg border bg-white p-4\">\n        <div className=\"grid md:grid-cols-3 gap-4\">\n          <div>\n            <label className=\"block text-sm text-slate-600 mb-1\">Target format</label>\n            <select value={target} onChange={(e)=>setTarget(e.target.value)} className=\"w-full rounded-md border-slate-300\">\n              {FORMATS.map(f => <option key={f} value={f}>{f.toUpperCase()}</option>)}\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-sm text-slate-600 mb-1\">Quality</label>\n            <input type=\"range\" min={1} max={100} value={quality} onChange={(e)=>setQuality(Number(e.target.value))} className=\"w-full\" />\n            <div className=\"text-xs text-slate-500 mt-1\">{quality}</div>\n          </div>\n          <div className=\"flex items-end\">\n            <button onClick={start} className=\"inline-flex items-center gap-2 rounded-md bg-sky-600 px-4 py-2 text-white hover:bg-sky-700\">\n              <Wand2 size={16} /> Convert\n            </button>\n          </div>\n        </div>\n        <div {...getRootProps()} className={\"mt-4 border-2 border-dashed rounded-lg p-8 text-center \" + dropClass}>\n          <input {...getInputProps()} />\n          <div className=\"flex items-center justify-center gap-2 text-slate-600\">\n            <Upload /> Drag & drop images here, or click to select\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid gap-3\" key={refreshKey}>\n        {jobs.map((j, idx) => (\n          <div key={`${idx}-${j.status}-${refreshKey}`} className=\"rounded-md border bg-white p-4 shadow-sm\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"text-sm font-medium\">{j.file.name}</div>\n                  <div className=\"text-xs text-slate-500\">\n                    {Math.round(j.file.size/1024)} KB â†’ {target.toUpperCase()}\n                  </div>\n                </div>\n                <div className=\"mt-1 flex items-center gap-2\">\n                  {j.status === 'running' && (\n                    <div className=\"flex items-center gap-2 text-xs text-blue-600\">\n                      <div className=\"animate-spin h-3 w-3 border border-blue-600 border-t-transparent rounded-full\"></div>\n                      Converting...\n                    </div>\n                  )}\n                  {j.status === 'done' && (\n                    <div className=\"text-xs text-emerald-600 flex items-center gap-1\">\n                      <CheckCircle size={14}/> Converted successfully\n                    </div>\n                  )}\n                  {j.status === 'error' && (\n                    <div className=\"text-rose-600 flex items-center gap-1 text-xs\">\n                      <AlertTriangle size={14}/> {j.error}\n                    </div>\n                  )}\n                  {j.status === 'queued' && (\n                    <div className=\"text-xs text-slate-500\">\n                      Queued for conversion\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                {j.status === 'done' && j.url && (\n                  <>\n                    <button \n                      onClick={() => window.open(j.url, '_blank')}\n                      className=\"inline-flex items-center gap-1 rounded-md bg-slate-100 px-3 py-1.5 text-slate-700 hover:bg-slate-200 text-sm\"\n                    >\n                      <Eye size={14} /> Preview\n                    </button>\n                    <a \n                      href={j.url} \n                      download={`${j.file.name.split('.')[0]}_converted.${target}`}\n                      className=\"inline-flex items-center gap-1 rounded-md bg-emerald-600 px-3 py-1.5 text-white hover:bg-emerald-700 text-sm\"\n                    >\n                      <Download size={16} /> Download\n                    </a>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}